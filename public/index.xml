<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lyeka</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Lyeka</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>augustr2017@163.com (Lyeka)</managingEditor>
    <webMaster>augustr2017@163.com (Lyeka)</webMaster>
    <lastBuildDate>Fri, 26 Sep 2025 18:33:15 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deep Research 项目研究</title>
      <link>http://localhost:1313/posts/deep-research/</link>
      <pubDate>Fri, 26 Sep 2025 18:33:15 +0800</pubDate><author>augustr2017@163.com (Lyeka)</author>
      <guid>http://localhost:1313/posts/deep-research/</guid>
      <description>&lt;p&gt;研究对象&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LangChain Open Deep Research&lt;/li&gt;&#xA;&lt;li&gt;ROMA Deep Research&lt;/li&gt;&#xA;&lt;li&gt;Tongyi Deep Research&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;langchain-open-deep-research&#34;&gt;LangChain Open Deep Research&lt;/h2&gt;&#xA;&lt;h3 id=&#34;架构&#34;&gt;架构&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://private-user-images.githubusercontent.com/181020547/465824799-12a2371b-8be2-4219-9b48-90503eb43c69.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTg5MDAwNTQsIm5iZiI6MTc1ODg5OTc1NCwicGF0aCI6Ii8xODEwMjA1NDcvNDY1ODI0Nzk5LTEyYTIzNzFiLThiZTItNDIxOS05YjQ4LTkwNTAzZWI0M2M2OS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwOTI2JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDkyNlQxNTE1NTRaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1jMTVhYzMxNjhhMDZkMjBiMDFmYjYzMDZkZjIwNWY3ZDc1YjcwMTdiMjdhYzRlYjc4YjNjNzZlZTI4ZjExNWZkJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.qUjH08Vr3TVMgb9IQ3shRwn1wo42vkSFlRh-XftlurI&#34; alt=&#34;&#34;&gt;&#xA;该项目将 任务划分成了3个阶段&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Scope：明确研究范围&lt;/li&gt;&#xA;&lt;li&gt;Research：核心模块，执行研究任务&lt;/li&gt;&#xA;&lt;li&gt;Write：输出最终报告&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;graph-node&#34;&gt;Graph Node&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://private-user-images.githubusercontent.com/181020547/465825499-052f2ed3-c664-4a4f-8ec2-074349dcaa3f.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTg5MDAwNTQsIm5iZiI6MTc1ODg5OTc1NCwicGF0aCI6Ii8xODEwMjA1NDcvNDY1ODI1NDk5LTA1MmYyZWQzLWM2NjQtNGE0Zi04ZWMyLTA3NDM0OWRjYWEzZi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwOTI2JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDkyNlQxNTE1NTRaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kNjI3NzAzYmZmYmU1NTE3ZTk0YWZmNzE2ZWMxMjM3ZjMzZTk0MzNhYjI1MjUxNGYxYzM3ZDI2MjNhNWJkNDg5JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.VQf8j72fItuFXrHpAryoFnGnUSpjlPZ67vfeC5V5xF0&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Scope Phase 包含两个节点：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;clarify_with_user node： 当用户的任务比较模糊，缺失足够的上下文信息时，会和用户确认收集额外信息，以得到一个相对清晰的任务。&lt;/li&gt;&#xA;&lt;li&gt;write_research_brief node： 根据与用户之前的交互（包括问题澄清，在先前的研究报告上进一步探索等）生成一个研究简报。生成简报主要是为了减少噪音，整合上下文，后续的研究过程会在这个简报上进行。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Research Phase 这是一个 multi agent 的实现：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Supervisor Sub Graph：确定研究简报是否可以分解为独立的子主题，并将任务分配给具有独立上下文窗口的子代理&#xA;&lt;ul&gt;&#xA;&lt;li&gt;supervisor node&lt;/li&gt;&#xA;&lt;li&gt;supervisor_tools node：工具节点，包含下面工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Think Tool：反思工具，在执行 ConductResearch 前会进行思考现在有了什么信息，还需要哪些信息等，用于规划后续 ConductResearch 行为&lt;/li&gt;&#xA;&lt;li&gt;ConductResearch Tool ：调用 Research Sub-Agents  进行检索与研究，支持并发调以调研不同的 topic&lt;/li&gt;&#xA;&lt;li&gt;ResearchComplete Tool：虚拟工具，作为 Research Phase 终结的条件（除了该工具，还有研究迭代次数限制，无工具调用工具会终止 Research 流程）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Researcher Sub Graph ：根据 supervisor 分配的主题进行研究&#xA;&lt;ul&gt;&#xA;&lt;li&gt;researcher node ：&lt;/li&gt;&#xA;&lt;li&gt;researcher_tools node: 工具节点，包含下面工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Think Tool： 和 Supervisor 类似，也有一个 ThinkTool 来规划后续 search 流程&lt;/li&gt;&#xA;&lt;li&gt;Search Tools：搜索工具，内部支持了 TAVILY 搜索， OpenAI 和ANTHROPIC 的 Web Search 功能&lt;/li&gt;&#xA;&lt;li&gt;MCP Tools：支持通过 MCP 协议动态扩展 Researcher 的工具与能力&lt;/li&gt;&#xA;&lt;li&gt;ResearchComplete Tool： 作为 Researcher  终结的条件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;compress_research_node:  当子代理完成任务后，会将收集到的信息进行进一步撰写详细且干净的回答返回给 supervisor&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Write Phase&#xA;&lt;ul&gt;&#xA;&lt;li&gt;final_report_generation node：当 supervisor 收集到足够的信息结束研究任务后，该节点结合研究简报撰写最后输出的报告&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;llm&#34;&gt;LLM&lt;/h3&gt;&#xA;&lt;p&gt;该项目支持了 OpenAI、ANTHROPIC  和 Google 系列的 LLM（也可以扩展使用 Open Router 或者本地模型） ，同时允许在不同的节点配置使用不同的模型去处理任务&#xA;默认配置如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trae Agent 源码阅读</title>
      <link>http://localhost:1313/posts/trae_agent_read/</link>
      <pubDate>Fri, 26 Sep 2025 17:18:14 +0800</pubDate><author>augustr2017@163.com (Lyeka)</author>
      <guid>http://localhost:1313/posts/trae_agent_read/</guid>
      <description>&lt;blockquote class=&#34;my-5 p-4 rounded border-solid border-2 border-foam&#34;&gt;&#xA;  本文分析基于 Git commit 2cb657823bc5f9bdf276a69d2bcdd60ec389de46 版本&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;项目概览&#34;&gt;项目概览&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;trae-agent/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── trae_agent/                       &lt;span class=&#34;c1&#34;&gt;# 核心包目录&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── agent/                        &lt;span class=&#34;c1&#34;&gt;# Agent核心逻辑&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── agent_basics.py           &lt;span class=&#34;c1&#34;&gt;# 基础数据结构 (AgentState, AgentStep)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── base_agent.py             &lt;span class=&#34;c1&#34;&gt;# 抽象基类 (ReAct循环逻辑)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── trae_agent.py             &lt;span class=&#34;c1&#34;&gt;# 具体实现 (软件工程专用)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── agent.py                  &lt;span class=&#34;c1&#34;&gt;# 包装器 (外观模式)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   └── docker_manager.py         &lt;span class=&#34;c1&#34;&gt;# Docker环境管理&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── tools/                        &lt;span class=&#34;c1&#34;&gt;# 工具集合&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── base.py                   &lt;span class=&#34;c1&#34;&gt;# 工具基类和接口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── bash_tool.py              &lt;span class=&#34;c1&#34;&gt;# Shell命令执行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── edit_tool.py              &lt;span class=&#34;c1&#34;&gt;# 文件编辑工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── json_edit_tool.py         &lt;span class=&#34;c1&#34;&gt;# JSON编辑工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── task_done_tool.py         &lt;span class=&#34;c1&#34;&gt;# 任务完成工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── sequential_thinking_tool.py &lt;span class=&#34;c1&#34;&gt;# 结构化思考&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── mcp_tool.py               &lt;span class=&#34;c1&#34;&gt;# MCP协议工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   └── ckg/                      &lt;span class=&#34;c1&#34;&gt;# 代码知识图谱&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── utils/                        &lt;span class=&#34;c1&#34;&gt;# 工具类模块&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── llm_clients/              &lt;span class=&#34;c1&#34;&gt;# LLM客户端&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── llm_client.py         &lt;span class=&#34;c1&#34;&gt;# 统一客户端接口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── anthropic_client.py   &lt;span class=&#34;c1&#34;&gt;# Claude集成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── openai_client.py      &lt;span class=&#34;c1&#34;&gt;# GPT集成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── google_client.py      &lt;span class=&#34;c1&#34;&gt;# Gemini集成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   └── ...                   &lt;span class=&#34;c1&#34;&gt;# 其他LLM提供商&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── cli/                      &lt;span class=&#34;c1&#34;&gt;# 命令行界面&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── console_factory.py    &lt;span class=&#34;c1&#34;&gt;# 控制台工厂&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   ├── simple_console.py     &lt;span class=&#34;c1&#34;&gt;# 简单文本界面&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │   └── rich_console.py       &lt;span class=&#34;c1&#34;&gt;# 富文本界面&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── config.py                 &lt;span class=&#34;c1&#34;&gt;# 配置管理&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── trajectory_recorder.py    &lt;span class=&#34;c1&#34;&gt;# 轨迹记录&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   └── mcp_client.py             &lt;span class=&#34;c1&#34;&gt;# MCP协议客户端&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── prompt/                       &lt;span class=&#34;c1&#34;&gt;# 提示词管理&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   └── agent_prompt.py           &lt;span class=&#34;c1&#34;&gt;# Agent提示词&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── cli.py                        &lt;span class=&#34;c1&#34;&gt;# 命令行入口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── dist/                         &lt;span class=&#34;c1&#34;&gt;# 分发工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── evaluation/                       &lt;span class=&#34;c1&#34;&gt;# 评估框架&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── run_evaluation.py             &lt;span class=&#34;c1&#34;&gt;# SWE-bench评估脚本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── utils.py                      &lt;span class=&#34;c1&#34;&gt;# 评估工具函数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── patch_selection/              &lt;span class=&#34;c1&#34;&gt;# 补丁选择评估&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── tests/                            &lt;span class=&#34;c1&#34;&gt;# 测试套件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── agent/                        &lt;span class=&#34;c1&#34;&gt;# Agent测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── tools/                        &lt;span class=&#34;c1&#34;&gt;# 工具测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── utils/                        &lt;span class=&#34;c1&#34;&gt;# 工具类测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── docs/                             &lt;span class=&#34;c1&#34;&gt;# 文档&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── tools.md                      &lt;span class=&#34;c1&#34;&gt;# 工具文档&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   └── TRAJECTORY_RECORDING.md       &lt;span class=&#34;c1&#34;&gt;# 轨迹记录文档&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── server/                           &lt;span class=&#34;c1&#34;&gt;# FastAPI服务端 (可选)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── pyproject.toml                    &lt;span class=&#34;c1&#34;&gt;# Python项目配置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── trae_config.yaml.example          &lt;span class=&#34;c1&#34;&gt;# 配置模板&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── README.md                         &lt;span class=&#34;c1&#34;&gt;# 项目说明&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关系图谱&#xA;&#xA;&lt;div class=&#34;mermaid&#34; align=&#34;center&#34;&gt;&#xA;graph TB&#xA;    %% 外部接口层&#xA;    CLI[CLI Interface&lt;br/&gt;trae_agent/cli.py] --&gt; Agent[Agent&lt;br/&gt;trae_agent/agent/agent.py]&#xA;    Server[FastAPI Server&lt;br/&gt;server/] --&gt; Agent&#xA;    &#xA;    %% 代理层&#xA;    Agent --&gt; TraeAgent[TraeAgent&lt;br/&gt;trae_agent/agent/trae_agent.py]&#xA;    Agent --&gt; BaseAgent[BaseAgent&lt;br/&gt;trae_agent/agent/base_agent.py]&#xA;    TraeAgent -.-&gt; BaseAgent&#xA;    &#xA;    %% 配置层&#xA;    Config[Configuration&lt;br/&gt;trae_agent/utils/config.py] --&gt; Agent&#xA;    Config --&gt; TraeAgent&#xA;    &#xA;    %% LLM 客户端层&#xA;    BaseAgent --&gt; LLMClient[LLM Client&lt;br/&gt;trae_agent/utils/llm_clients/]&#xA;    LLMClient --&gt; Anthropic[anthropic_client.py]&#xA;    LLMClient --&gt; OpenAI[openai_client.py]&#xA;    LLMClient --&gt; Google[google_client.py]&#xA;    LLMClient --&gt; Ollama[ollama_client.py]&#xA;    LLMClient --&gt; Azure[azure_client.py]&#xA;    LLMClient --&gt; Doubao[doubao_client.py]&#xA;    LLMClient --&gt; OpenRouter[openrouter_client.py]&#xA;    &#xA;    %% 工具执行层&#xA;    BaseAgent --&gt; ToolExecutor[Tool Executor&lt;br/&gt;trae_agent/tools/base.py]&#xA;    BaseAgent --&gt; DockerToolExecutor[Docker Tool Executor&lt;br/&gt;trae_agent/tools/docker_tool_executor.py]&#xA;    &#xA;    ToolExecutor --&gt; ToolRegistry[Tools Registry&lt;br/&gt;trae_agent/tools/__init__.py]&#xA;    DockerToolExecutor --&gt; ToolRegistry&#xA;    &#xA;    %% 工具实现层&#xA;    ToolRegistry --&gt; BashTool[Bash Tool]&#xA;    ToolRegistry --&gt; EditTool[Text Editor Tool]&#xA;    ToolRegistry --&gt; JSONEditTool[JSON Edit Tool]&#xA;    ToolRegistry --&gt; ThinkingTool[Sequential Thinking Tool]&#xA;    ToolRegistry --&gt; TaskDoneTool[Task Done Tool]&#xA;    ToolRegistry --&gt; CKGTool[Code Knowledge Graph Tool]&#xA;    &#xA;    %% MCP 工具层&#xA;    TraeAgent --&gt; MCPClient[MCP Client&lt;br/&gt;trae_agent/utils/mcp_client.py]&#xA;    MCPClient --&gt; MCPTool[MCP Tools&lt;br/&gt;trae_agent/tools/mcp_tool.py]&#xA;    &#xA;    %% Docker 管理层&#xA;    BaseAgent --&gt; DockerManager[Docker Manager&lt;br/&gt;trae_agent/agent/docker_manager.py]&#xA;    &#xA;    %% 控制台层&#xA;    Agent --&gt; CLIConsole[CLI Console&lt;br/&gt;trae_agent/utils/cli/]&#xA;    CLIConsole --&gt; SimpleConsole[Simple Console]&#xA;    CLIConsole --&gt; RichConsole[Rich Console]&#xA;    &#xA;    %% 轨迹记录层&#xA;    Agent --&gt; TrajectoryRecorder[Trajectory Recorder&lt;br/&gt;trae_agent/utils/trajectory_recorder.py]&#xA;    &#xA;    %% 提示层&#xA;    TraeAgent --&gt; SystemPrompt[System Prompt&lt;br/&gt;trae_agent/prompt/agent_prompt.py]&#xA;    &#xA;    %% 评估层&#xA;    Evaluation[Evaluation&lt;br/&gt;evaluation/] --&gt; Agent&#xA;    Evaluation --&gt; SWEBench[SWE-bench]&#xA;    Evaluation --&gt; SWEBenchLive[SWE-bench-Live]&#xA;    Evaluation --&gt; MultiSWEBench[Multi-SWE-bench]&#xA;    &#xA;    %% 测试层&#xA;    Tests[Tests&lt;br/&gt;tests/] -.-&gt; Agent&#xA;    Tests -.-&gt; ToolRegistry&#xA;    Tests -.-&gt; Config&#xA;    &#xA;    %% 样式定义&#xA;    classDef interface fill:#e1f5fe,stroke:#01579b,stroke-width:2px&#xA;    classDef core fill:#f3e5f5,stroke:#4a148c,stroke-width:2px&#xA;    classDef tools fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px&#xA;    classDef llm fill:#fff3e0,stroke:#e65100,stroke-width:2px&#xA;    classDef utils fill:#f1f8e9,stroke:#33691e,stroke-width:2px&#xA;    classDef eval fill:#fce4ec,stroke:#880e4f,stroke-width:2px&#xA;    &#xA;    class CLI,Server interface&#xA;    class Agent,TraeAgent,BaseAgent core&#xA;    class ToolExecutor,DockerToolExecutor,ToolRegistry,BashTool,EditTool,JSONEditTool,ThinkingTool,TaskDoneTool,CKGTool,MCPTool tools&#xA;    class LLMClient,Anthropic,OpenAI,Google,Ollama,Azure,Doubao,OpenRouter llm&#xA;    class Config,CLIConsole,TrajectoryRecorder,DockerManager,MCPClient,SystemPrompt utils&#xA;    class Evaluation,SWEBench,SWEBenchLive,MultiSWEBench,Tests eval&#xA;&lt;/div&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>augustr2017@163.com (Lyeka)</author>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;Hi, my name is Lyeka&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read</title>
      <link>http://localhost:1313/reading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>augustr2017@163.com (Lyeka)</author>
      <guid>http://localhost:1313/reading/</guid>
      <description>&lt;h2 id=&#34;2025&#34;&gt;2025&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 以交易为生&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你一生的故事&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 穷查理宝典&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 专业投机原理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 海龟交易法则&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 消失的十三级台阶&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 克莱因壶&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
