<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lyeka</title><link>https://example.org/</link><description>Recent content on Lyeka</description><generator>Hugo</generator><language>en-us</language><managingEditor>augustr2017@163.com (Lyeka)</managingEditor><webMaster>augustr2017@163.com (Lyeka)</webMaster><lastBuildDate>Fri, 26 Sep 2025 18:33:15 +0800</lastBuildDate><atom:link href="https://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Deep Research 项目研究</title><link>https://example.org/posts/deep-research/</link><pubDate>Fri, 26 Sep 2025 18:33:15 +0800</pubDate><author>augustr2017@163.com (Lyeka)</author><guid>https://example.org/posts/deep-research/</guid><description>&lt;p&gt;研究对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LangChain Open Deep Research&lt;/li&gt;
&lt;li&gt;ROMA Deep Research&lt;/li&gt;
&lt;li&gt;Tongyi Deep Research&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="langchain-open-deep-research"&gt;LangChain Open Deep Research&lt;/h2&gt;
&lt;h3 id="架构"&gt;架构&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://example.org/img/deep_research_read/1.png" alt=""&gt;
该项目将 任务划分成了3个阶段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scope：明确研究范围&lt;/li&gt;
&lt;li&gt;Research：核心模块，执行研究任务&lt;/li&gt;
&lt;li&gt;Write：输出最终报告&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="graph-node"&gt;Graph Node&lt;/h4&gt;
&lt;p&gt;&lt;img src="https://example.org/img/deep_research_read/2.png" alt=""&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scope Phase 包含两个节点：
&lt;ul&gt;
&lt;li&gt;clarify_with_user node： 当用户的任务比较模糊，缺失足够的上下文信息时，会和用户确认收集额外信息，以得到一个相对清晰的任务。&lt;/li&gt;
&lt;li&gt;write_research_brief node： 根据与用户之前的交互（包括问题澄清，在先前的研究报告上进一步探索等）生成一个研究简报。生成简报主要是为了减少噪音，整合上下文，后续的研究过程会在这个简报上进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Research Phase 这是一个 multi agent 的实现：
&lt;ul&gt;
&lt;li&gt;Supervisor Sub Graph：确定研究简报是否可以分解为独立的子主题，并将任务分配给具有独立上下文窗口的子代理
&lt;ul&gt;
&lt;li&gt;supervisor node&lt;/li&gt;
&lt;li&gt;supervisor_tools node：工具节点，包含下面工具
&lt;ul&gt;
&lt;li&gt;Think Tool：反思工具，在执行 ConductResearch 前会进行思考现在有了什么信息，还需要哪些信息等，用于规划后续 ConductResearch 行为&lt;/li&gt;
&lt;li&gt;ConductResearch Tool ：调用 Research Sub-Agents 进行检索与研究，支持并发调以调研不同的 topic&lt;/li&gt;
&lt;li&gt;ResearchComplete Tool：虚拟工具，作为 Research Phase 终结的条件（除了该工具，还有研究迭代次数限制，无工具调用工具会终止 Research 流程）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Researcher Sub Graph ：根据 supervisor 分配的主题进行研究
&lt;ul&gt;
&lt;li&gt;researcher node ：&lt;/li&gt;
&lt;li&gt;researcher_tools node: 工具节点，包含下面工具
&lt;ul&gt;
&lt;li&gt;Think Tool： 和 Supervisor 类似，也有一个 ThinkTool 来规划后续 search 流程&lt;/li&gt;
&lt;li&gt;Search Tools：搜索工具，内部支持了 TAVILY 搜索， OpenAI 和ANTHROPIC 的 Web Search 功能&lt;/li&gt;
&lt;li&gt;MCP Tools：支持通过 MCP 协议动态扩展 Researcher 的工具与能力&lt;/li&gt;
&lt;li&gt;ResearchComplete Tool： 作为 Researcher 终结的条件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;compress_research_node: 当子代理完成任务后，会将收集到的信息进行进一步撰写详细且干净的回答返回给 supervisor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Write Phase
&lt;ul&gt;
&lt;li&gt;final_report_generation node：当 supervisor 收集到足够的信息结束研究任务后，该节点结合研究简报撰写最后输出的报告&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="llm"&gt;LLM&lt;/h3&gt;
&lt;p&gt;该项目支持了 OpenAI、ANTHROPIC 和 Google 系列的 LLM（也可以扩展使用 Open Router 或者本地模型） ，同时允许在不同的节点配置使用不同的模型去处理任务
默认配置如下&lt;/p&gt;</description></item><item><title>Trae Agent 源码阅读</title><link>https://example.org/posts/trae_agent_read/</link><pubDate>Fri, 26 Sep 2025 17:18:14 +0800</pubDate><author>augustr2017@163.com (Lyeka)</author><guid>https://example.org/posts/trae_agent_read/</guid><description>&lt;blockquote class="my-5 p-4 rounded border-solid border-2 border-foam"&gt;
 本文分析基于 Git commit 2cb657823bc5f9bdf276a69d2bcdd60ec389de46 版本
&lt;/blockquote&gt;

&lt;h2 id="项目概览"&gt;项目概览&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;trae-agent/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── trae_agent/ &lt;span class="c1"&gt;# 核心包目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── agent/ &lt;span class="c1"&gt;# Agent核心逻辑&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── agent_basics.py &lt;span class="c1"&gt;# 基础数据结构 (AgentState, AgentStep)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── base_agent.py &lt;span class="c1"&gt;# 抽象基类 (ReAct循环逻辑)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── trae_agent.py &lt;span class="c1"&gt;# 具体实现 (软件工程专用)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── agent.py &lt;span class="c1"&gt;# 包装器 (外观模式)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ └── docker_manager.py &lt;span class="c1"&gt;# Docker环境管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── tools/ &lt;span class="c1"&gt;# 工具集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── base.py &lt;span class="c1"&gt;# 工具基类和接口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── bash_tool.py &lt;span class="c1"&gt;# Shell命令执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── edit_tool.py &lt;span class="c1"&gt;# 文件编辑工具&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── json_edit_tool.py &lt;span class="c1"&gt;# JSON编辑工具&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── task_done_tool.py &lt;span class="c1"&gt;# 任务完成工具&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── sequential_thinking_tool.py &lt;span class="c1"&gt;# 结构化思考&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── mcp_tool.py &lt;span class="c1"&gt;# MCP协议工具&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ └── ckg/ &lt;span class="c1"&gt;# 代码知识图谱&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── utils/ &lt;span class="c1"&gt;# 工具类模块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── llm_clients/ &lt;span class="c1"&gt;# LLM客户端&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── llm_client.py &lt;span class="c1"&gt;# 统一客户端接口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── anthropic_client.py &lt;span class="c1"&gt;# Claude集成&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── openai_client.py &lt;span class="c1"&gt;# GPT集成&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── google_client.py &lt;span class="c1"&gt;# Gemini集成&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ └── ... &lt;span class="c1"&gt;# 其他LLM提供商&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── cli/ &lt;span class="c1"&gt;# 命令行界面&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── console_factory.py &lt;span class="c1"&gt;# 控制台工厂&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ ├── simple_console.py &lt;span class="c1"&gt;# 简单文本界面&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │ └── rich_console.py &lt;span class="c1"&gt;# 富文本界面&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── config.py &lt;span class="c1"&gt;# 配置管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── trajectory_recorder.py &lt;span class="c1"&gt;# 轨迹记录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ └── mcp_client.py &lt;span class="c1"&gt;# MCP协议客户端&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── prompt/ &lt;span class="c1"&gt;# 提示词管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ └── agent_prompt.py &lt;span class="c1"&gt;# Agent提示词&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── cli.py &lt;span class="c1"&gt;# 命令行入口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ └── dist/ &lt;span class="c1"&gt;# 分发工具&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── evaluation/ &lt;span class="c1"&gt;# 评估框架&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── run_evaluation.py &lt;span class="c1"&gt;# SWE-bench评估脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── utils.py &lt;span class="c1"&gt;# 评估工具函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ └── patch_selection/ &lt;span class="c1"&gt;# 补丁选择评估&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── tests/ &lt;span class="c1"&gt;# 测试套件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── agent/ &lt;span class="c1"&gt;# Agent测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── tools/ &lt;span class="c1"&gt;# 工具测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ └── utils/ &lt;span class="c1"&gt;# 工具类测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── docs/ &lt;span class="c1"&gt;# 文档&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── tools.md &lt;span class="c1"&gt;# 工具文档&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ └── TRAJECTORY_RECORDING.md &lt;span class="c1"&gt;# 轨迹记录文档&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── server/ &lt;span class="c1"&gt;# FastAPI服务端 (可选)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── pyproject.toml &lt;span class="c1"&gt;# Python项目配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── trae_config.yaml.example &lt;span class="c1"&gt;# 配置模板&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└── README.md &lt;span class="c1"&gt;# 项目说明&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关系图谱

&lt;div class="mermaid" align="center"&gt;
graph TB
 %% 外部接口层
 CLI[CLI Interface&lt;br/&gt;trae_agent/cli.py] --&gt; Agent[Agent&lt;br/&gt;trae_agent/agent/agent.py]
 Server[FastAPI Server&lt;br/&gt;server/] --&gt; Agent
 
 %% 代理层
 Agent --&gt; TraeAgent[TraeAgent&lt;br/&gt;trae_agent/agent/trae_agent.py]
 Agent --&gt; BaseAgent[BaseAgent&lt;br/&gt;trae_agent/agent/base_agent.py]
 TraeAgent -.-&gt; BaseAgent
 
 %% 配置层
 Config[Configuration&lt;br/&gt;trae_agent/utils/config.py] --&gt; Agent
 Config --&gt; TraeAgent
 
 %% LLM 客户端层
 BaseAgent --&gt; LLMClient[LLM Client&lt;br/&gt;trae_agent/utils/llm_clients/]
 LLMClient --&gt; Anthropic[anthropic_client.py]
 LLMClient --&gt; OpenAI[openai_client.py]
 LLMClient --&gt; Google[google_client.py]
 LLMClient --&gt; Ollama[ollama_client.py]
 LLMClient --&gt; Azure[azure_client.py]
 LLMClient --&gt; Doubao[doubao_client.py]
 LLMClient --&gt; OpenRouter[openrouter_client.py]
 
 %% 工具执行层
 BaseAgent --&gt; ToolExecutor[Tool Executor&lt;br/&gt;trae_agent/tools/base.py]
 BaseAgent --&gt; DockerToolExecutor[Docker Tool Executor&lt;br/&gt;trae_agent/tools/docker_tool_executor.py]
 
 ToolExecutor --&gt; ToolRegistry[Tools Registry&lt;br/&gt;trae_agent/tools/__init__.py]
 DockerToolExecutor --&gt; ToolRegistry
 
 %% 工具实现层
 ToolRegistry --&gt; BashTool[Bash Tool]
 ToolRegistry --&gt; EditTool[Text Editor Tool]
 ToolRegistry --&gt; JSONEditTool[JSON Edit Tool]
 ToolRegistry --&gt; ThinkingTool[Sequential Thinking Tool]
 ToolRegistry --&gt; TaskDoneTool[Task Done Tool]
 ToolRegistry --&gt; CKGTool[Code Knowledge Graph Tool]
 
 %% MCP 工具层
 TraeAgent --&gt; MCPClient[MCP Client&lt;br/&gt;trae_agent/utils/mcp_client.py]
 MCPClient --&gt; MCPTool[MCP Tools&lt;br/&gt;trae_agent/tools/mcp_tool.py]
 
 %% Docker 管理层
 BaseAgent --&gt; DockerManager[Docker Manager&lt;br/&gt;trae_agent/agent/docker_manager.py]
 
 %% 控制台层
 Agent --&gt; CLIConsole[CLI Console&lt;br/&gt;trae_agent/utils/cli/]
 CLIConsole --&gt; SimpleConsole[Simple Console]
 CLIConsole --&gt; RichConsole[Rich Console]
 
 %% 轨迹记录层
 Agent --&gt; TrajectoryRecorder[Trajectory Recorder&lt;br/&gt;trae_agent/utils/trajectory_recorder.py]
 
 %% 提示层
 TraeAgent --&gt; SystemPrompt[System Prompt&lt;br/&gt;trae_agent/prompt/agent_prompt.py]
 
 %% 评估层
 Evaluation[Evaluation&lt;br/&gt;evaluation/] --&gt; Agent
 Evaluation --&gt; SWEBench[SWE-bench]
 Evaluation --&gt; SWEBenchLive[SWE-bench-Live]
 Evaluation --&gt; MultiSWEBench[Multi-SWE-bench]
 
 %% 测试层
 Tests[Tests&lt;br/&gt;tests/] -.-&gt; Agent
 Tests -.-&gt; ToolRegistry
 Tests -.-&gt; Config
 
 %% 样式定义
 classDef interface fill:#e1f5fe,stroke:#01579b,stroke-width:2px
 classDef core fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
 classDef tools fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px
 classDef llm fill:#fff3e0,stroke:#e65100,stroke-width:2px
 classDef utils fill:#f1f8e9,stroke:#33691e,stroke-width:2px
 classDef eval fill:#fce4ec,stroke:#880e4f,stroke-width:2px
 
 class CLI,Server interface
 class Agent,TraeAgent,BaseAgent core
 class ToolExecutor,DockerToolExecutor,ToolRegistry,BashTool,EditTool,JSONEditTool,ThinkingTool,TaskDoneTool,CKGTool,MCPTool tools
 class LLMClient,Anthropic,OpenAI,Google,Ollama,Azure,Doubao,OpenRouter llm
 class Config,CLIConsole,TrajectoryRecorder,DockerManager,MCPClient,SystemPrompt utils
 class Evaluation,SWEBench,SWEBenchLive,MultiSWEBench,Tests eval
&lt;/div&gt;
&lt;/p&gt;</description></item><item><title>About Me</title><link>https://example.org/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>augustr2017@163.com (Lyeka)</author><guid>https://example.org/about/</guid><description>&lt;p&gt;Hi, my name is Lyeka&lt;/p&gt;</description></item><item><title>Read</title><link>https://example.org/reading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>augustr2017@163.com (Lyeka)</author><guid>https://example.org/reading/</guid><description>&lt;h2 id="2025"&gt;2025&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled="" type="checkbox"&gt; 以交易为生&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled="" type="checkbox"&gt; 你一生的故事&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled="" type="checkbox"&gt; 穷查理宝典&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked="" disabled="" type="checkbox"&gt; 专业投机原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked="" disabled="" type="checkbox"&gt; 海龟交易法则&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked="" disabled="" type="checkbox"&gt; 消失的十三级台阶&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked="" disabled="" type="checkbox"&gt; 克莱因壶&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>